#map $request_method:$http_origin $CORS_OPTIONS {
#    default 0;
#    OPTIONS:https://{{ hostname }} 1;
#    OPTIONS:https://dl7h4jvzhk0zg.cloudfront.net 1;
#}
#
#map $http_origin $CORS_OTHER {
#    default 0;
#    https://{{ hostname }} 1;
#    https://dl7h4jvzhk0zg.cloudfront.net 1;
#}

server {
    server_name {{ hostname }};
    listen 80;
    listen [::]:80;
    return 301 https://$host$request_uri;
}

server {
    server_name {{ hostname }};

    listen 443 ssl;
    listen [::]:443 ssl;

    access_log /var/log/nginx/{{ hostname }}.access.log;
    error_log /var/log/nginx/{{ hostname }}.error.log;

    ssl_certificate /etc/letsencrypt/live/{{ hostname }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ hostname }}/privkey.pem;
    ssl_dhparam /etc/pki/nginx/{{ hostname }}.pem;
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout  10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:SEED:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!RSAPSK:!aDH:!aECDH:!EDH-DSS-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA:!SRP;
    ssl_prefer_server_ciphers on;

    # Redirect to info site
    rewrite ^/(about|blog|category|contact|feed|projects|routefinder|support|trip-planner|tripplanner)(.*) http://info.bycycle.org/$1/$2 last;
    rewrite ^/200([\d])(.*) http://info.bycycle.org/200$1$2 last;

    # Fix ;find
    rewrite "^/regions/([^/]+)/services;find(.*)" http://{{ hostname }}/find$2?region=$1 last;
    rewrite "^/regions/([^/]+)/(geocode|route)s;find(.*)" http://{{ hostname }}/$2/find$3?region=$1 last;

    rewrite ^/regions/([^/]+)/services.* http://{{ hostname }}/find?region=$1 last;
    rewrite ^/regions/([^/]+)/(geocode|route)s.* http://{{ hostname }}/$1/find?region=$2 last;
    if ($args) {
        rewrite ^/regions/([^/]+) http://{{ hostname }}/find?region=$1 last;
    }
    rewrite ^/regions/([^/]+) http://{{ hostname }}/?region=$1 last;

    location /api {
#        if ($CORS_OPTIONS) {
#            add_header Access-Control-Allow-Origin $http_origin always;
#            add_header Access-Control-Allow-Methods * always;
#            add_header Access-Control-Allow-Headers Content-Type always;
#            add_header Access-Control-Max-Age 86400;
#            add_header Content-Length 0;
#            return 204;
#        }
#
#        if ($CORS_OTHER) {
#            add_header Access-Control-Allow-Origin $http_origin always;
#        }
        uwsgi_pass unix:/run/uwsgi/app/{{ hostname }}/socket;
        include uwsgi_params;
    }

    location /graph/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass http://localhost:8000/;
    }

    location / {
        root /sites/{{ hostname }}/webui/current;
        try_files $uri /index.html =404;
    }
}
